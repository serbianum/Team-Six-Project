# Declaring env's
env:
  repo:             "https://github.com/getredash/redash" # Add the URL for the desired GitHub Repository to build and push
  app_version:      "1.0" # Add desired app version
  repo_region:      "us-west2" # Specify Google Artifact Region
  app_name:         "redash" # Will be used as working directory must corresponed to the cloned repository name
  tag_new_version:  ${GITHUB_SHA} # GitHub Variable storing commit's message
  enable_sonar:     true # True for repo code scanning
  project_id:       "even-turbine-378502" #Enter GCP project ID
  gcp_repo_name:    "team6-redash-docker" # Google Artifact repository name
  sonar_cloud_org:  "team6-project" # Add SonarCloud Organization name
  sonar_cloud_proj: "team6-project_redash" # Add SonaCloud Project name

name: Build and push Docker image

on:
  push:
    branches:
      - main

  workflow_dispatch:    
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cloning the desired repository
        run: |
          git clone ${{ env.repo }}
          echo "If the cloning was successful a directory with repo name will be pressent below: "
          ls
      
      # - name: Switch Branches
      #   working-directory: ${{ env.app_name }}
      #   run: |
      #     git checkout ${{ env.app_version }}

      - name: SonarCloud Scan
        if: ${{ env.enable_sonar }} == "true"  # makes it optional
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          projectBaseDir: ${{ env.app_name }}
          args: >
            -Dsonar.organization=${{ env.sonar_cloud_org }}
            -Dsonar.projectKey=${{ env.sonar_cloud_proj }}
            -Dsonar.verbose=true

      - name: Build the docker Image
        working-directory: ${{ env.app_name }}
        run: |
          docker build -t ${{ env.app_name }}:${{ env.app_version }} .
      
      - name: Tag the docker image
        working-directory: ${{ env.app_name }}
        run: | 
          docker image tag ${{ env.app_name }}:${{ env.app_version }} ${{ env.repo_region }}-docker.pkg.dev/${{ env.project_id }}/${{ env.gcp_repo_name }}/${{ env.app_name }}:${{ env.tag_new_version }}
          echo "Docker images list: "
          docker images

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
            project_id: ${{ env.project_id }}

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker Client
        run: |-
            gcloud auth configure-docker ${{ env.repo_region }}-docker.pkg.dev

      - name: Push Docker image to Artifact Registry
        working-directory: ${{ env.app_name }}
        run: |-
          docker push  ${{ env.repo_region }}-docker.pkg.dev/${{ env.project_id }}/${{ env.gcp_repo_name }}/${{ env.app_name }}:${{ env.tag_new_version }}
      
      - name: Google Artifact Image Scan
        run: |-
          gcloud beta container images scan \
            ${{ env.repo_region }}-docker.pkg.dev/${{ env.project_id }}/${{ env.gcp_repo_name }}/${{ env.app_name }}:${{ env.tag_new_version }}
          gcloud beta container images describe \
            ${{ env.repo_region }}-docker.pkg.dev/${{ env.project_id }}/${{ env.gcp_repo_name }}/${{ env.app_name }}:${{ env.tag_new_version }} \
              --show-package-vulnerability
